//
// Bones.cpp for human in /home/brunie_j/local/my/havetofly/src/human
//
// Made by Brunier Jean
// Login   <brunie_j@epitech.net>
//
// Started on  Wed Apr 10 17:23:55 2013 Brunier Jean
// Last update Sun Apr 14 21:59:23 2013 Brunier Jean
//

#include "Bones.hh"
#include "Graphics.hh"
#include "Circle.hh"

#include <iostream>

const int	Bones::_size[Bones::COUNT] =
  {
    20,
    60,
    30,
    100,
    20,
    60,
    30,
    100,
    16,
    32
  };

Bones::Bones(const Position &centre, int color, int color2, const int &orient) :
	_center(centre), _orient(orient), _color(color), _color2(color2)
{
  _color = 0;
}

Bones::~Bones()
{
}

void		Bones::print(Graphics &g)
{
  Position	center = _center;
  check();
  Position	pos[Bones::COUNT];

  pos[BODY] = center + Position(_angle[BODY], BACK);
  pos[HEAD] = center + Position(_angle[BODY], BACK);
  g.circle(center + Position(_angle[BODY], HEAD), HEAD, _color);
  g.line(center, pos[BODY], _color);
  for (int i = 0; i < 4; i++)
    {
      pos[i * 2 + 1] = ((i % 2) ? pos[BODY] : center) +
	Position(_angle[i * 2 + 1] +
	_angle[BODY], _size[i + 1]);
      pos[i * 2] = pos[i * 2 + 1] + Position(_angle[i * 2] + _angle[BODY], _size[i]);
      g.line(((i % 2) ? pos[BODY] : center), pos[i * 2 + 1], _color);
      g.line(pos[i * 2 + 1], pos[i * 2], _color);
    }


  /*
  g.bend(_center, U_BACK, sex, L_BACK, _color);
  g.bend(_center, U_ARM, _hand1, L_ARM, _color);
  g.bend(_center, U_ARM, _hand2, L_ARM, _color);
  g.bend(_center, U_LEGG, _foot1, L_LEGG, _color);
  g.bend(_center, U_LEGG, _foot2, L_LEGG, _color);
  */
}

void	Bones::up(Position const &, Position &, int)
{
  /*
  next = old * _angle;
  if (next.distance() > max)
    next = Position(next.angle(), max);
  */
}

void	Bones::check()
{
  for (int i = 0; i < Bones::COUNT; i++)
    _angle[i] = angle[i];
  if (_angle[Bones::HEAD].deg() > 90)
    _angle[Bones::HEAD] = Angle(90, 0);
  else if (_angle[Bones::HEAD].deg() < -90)
    _angle[Bones::HEAD] = Angle(-90, 0);
  _angle += Angle(90, 0);
}
  //void	circle(Position const &pos, const Distance &size, int color);
